{"version":3,"sources":["Constants.js","Components/MemberCard/index.js","Components/Roster/index.js","App.js","serviceWorker.js","index.js"],"names":["ENV","str","window","location","search","objURL","replace","RegExp","$0","$1","$2","$3","parseQueryString","env","BASE_URL","HR","gender","this","AVG_NORMAL_HR","MAX_DIFF_FITNESS_HR","MIN_FITNESS_HR","MAX_FITNESS_HR","MAX_MALE_HR","MAX_FEMALE_HR","Math","round","random","x","currentHr","alpha","Equation","SendPerformance","data","axios","post","Constants","MemberId","then","res","console","log","catch","err","CalculatePercentHR","hr","maxHr","CalculateVO2","rhr","CalculatePercentVO2","vo2","maxVo2","MemberCard","props","info","memberInfo","initHr","RandomNormalHR","initPercentHr","initVO2","parseFloat","restHr","toFixed","initPercentVO2","maxVO2","performance","ClassId","classId","id","Hr","Calories","Zone1","Zone2","Zone3","Zone4","Zone5","Heavyload","PeakHr","PercentHr","PeakPercentHr","VO2","PeakVO2","PercentVO2","PeakPercentVO2","state","emulatorInterval","undefined","isEmulatorRun","isCrease","time","status","UpdateStatus","isCheckIn","setState","Unbook","ResetPerformance","memberId","RunEmulator","setInterval","percentHr","weight","age","RandomFitnessHR","durationTime","INTERVAL_TIME","calo","CalculateCalories","StopEmulator","clearInterval","IncreaseFitness","setTimeout","DecreaseFitness","startSubcribers","push","stopSubcribers","joinSubcribers","resetSubcribers","fullName","photoURL","bodyStyle","padding","span","src","size","Text","strong","style","fontSize","moment","utc","format","gutter","type","backgroundColor","width","color","onClick","danger","icon","CaretUpOutlined","loading","CaretDownOutlined","justify","fontWeight","textAlign","React","Component","Roster","roster","length","map","member","key","md","App","Renew","reload","params","parseInt","isRenewwing","isStarting","isStopping","modalVisible","isFetchingMembers","members","selectedMember","rosters","StartAll","forEach","run","StopAll","JoinAll","Reset","showModal","get","res2","exIds","r","Promise","resolve","filter","m","includes","reject","handleOk","e","fetchRoster","handleCancel","selectEnv","href","value","onChange","Option","Search","placeholder","onSearch","title","visible","onOk","onCancel","target","selected","disabled","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8e9b04b9.chunk.js","sourcesContent":["function parseQueryString() {\r\n    const str = window.location.search;\r\n    const objURL = {};\r\n  \r\n    str.replace(\r\n        new RegExp( \"([^?=&]+)(=([^&]*))?\", \"g\" ),\r\n        function( $0, $1, $2, $3 ){\r\n            objURL[ $1 ] = $3;\r\n        }\r\n    );\r\n    return objURL;\r\n};\r\n\r\nconst DEV_ENDPOINT = \"https://gya6ha83ql.execute-api.ap-southeast-1.amazonaws.com/Dev/api\";\r\nconst TIC_ENDPOINT = \"https://bho5ndseoh.execute-api.ap-southeast-1.amazonaws.com/Tic/api\";\r\nexport let ENV = \"dev\";\r\nswitch (parseQueryString().env) {\r\n    case \"dev\":\r\n        ENV = \"dev\";\r\n        break;\r\n    case \"tic\":\r\n        ENV = \"tic\";\r\n        break;\r\n    default:\r\n        ENV = \"dev\";\r\n        break;\r\n}\r\nexport const BASE_URL = ENV == \"tic\" ? TIC_ENDPOINT : DEV_ENDPOINT;","import React from 'react';\r\nimport { Card, Row, Col, Avatar, Typography, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport * as Constants from '../../Constants'; \r\n\r\nconst MAX_MALE_HR = 120;\r\nconst MAX_FEMALE_HR = 90;\r\nconst INTERVAL_TIME = 1000;\r\n\r\nclass HR {\r\n    constructor(gender = 'male') {\r\n        this.AVG_NORMAL_HR = 60;\r\n        this.MAX_DIFF_FITNESS_HR = 5;\r\n        this.MIN_FITNESS_HR = 65;\r\n        this.MAX_FITNESS_HR = (gender == 'male' ? MAX_MALE_HR-80 : MAX_FEMALE_HR-80) + Math.round(Math.random() * 120);\r\n    }\r\n\r\n    RandomNormalHR() {\r\n        return this.AVG_NORMAL_HR + Math.round((Math.random() - 0.5) * 20);\r\n    }\r\n\r\n    Equation(x) { // 0 -> 1\r\n        return x;\r\n        if (x < 0.5) return x + x/0.5*1.6;\r\n        return x + (1-(x-0.5)/0.5) * 1.6;\r\n    }\r\n\r\n    RandomFitnessHR(currentHr) {\r\n        const alpha = currentHr < this.MIN_FITNESS_HR ? 0.3 : currentHr > this.MAX_FITNESS_HR ? 0.7 :\r\n            1 - this.Equation((this.MAX_FITNESS_HR - currentHr) / (this.MAX_FITNESS_HR - this.MIN_FITNESS_HR));\r\n        const diff = Math.round((Math.random() - alpha) * (this.MAX_DIFF_FITNESS_HR - alpha * this.MAX_DIFF_FITNESS_HR/2));\r\n        return currentHr + diff;\r\n    }\r\n\r\n    IncreaseFitness() {\r\n        this.MAX_FITNESS_HR += 30;\r\n        this.MIN_FITNESS_HR += 30;\r\n    }\r\n\r\n    DecreaseFitness() {\r\n        this.MAX_FITNESS_HR -= 30;\r\n        this.MIN_FITNESS_HR -= 30;\r\n    }\r\n}\r\n\r\n//\r\nfunction SendPerformance(data) {\r\n    axios.post(`${Constants.BASE_URL}/members/${data.MemberId}/performance`, data)\r\n        .then(res => console.log('SUCCESS', res))\r\n        .catch(err => console.log('ERROR', err));\r\n}\r\nfunction RenewPerformace(memberId, classId) {\r\n    SendPerformance({\r\n        ClassId: classId,\r\n        MemberId: memberId,\r\n\r\n        Hr: 0,\r\n        Calories: 0,\r\n        Zone1: 0,\r\n        Zone2: 0,\r\n        Zone3: 0,\r\n        Zone4: 0,\r\n        Zone5: 0,\r\n        Heavyload: 0,\r\n\r\n        PeakHr: 0,\r\n        PercentHr: 0,\r\n        PeakPercentHr: 0,\r\n        VO2: 0,\r\n        PeakVO2: 0,\r\n        PercentVO2: 0,\r\n        PeakPercentVO2: 0,\r\n    })\r\n}\r\nfunction CheckIn(memberId, classId) {\r\n    return axios.post(`${Constants.BASE_URL}/classes/${classId}/updateMember`, {\r\n        ClassId: classId,\r\n        MemberId: memberId,\r\n        isCheckIn: true\r\n    })\r\n}\r\n\r\n// Performance\r\nfunction CalculateCalories(gender, weight, age, hr, durationTime = INTERVAL_TIME/1000/3600) {\r\n    let calo = 0;\r\n    if (gender == 'male') calo = ((-55.0969 + (0.6309 * hr) + (0.1988 * weight) + (0.2017 * age))/4.184) * 60 * durationTime;\r\n    else calo = ((-20.4022 + (0.4472 * hr) - (0.1263 * weight) + (0.074 * age))/4.184) * 60 * durationTime;\r\n    return calo < 0 ? 0 : calo;\r\n}\r\nfunction CalculatePercentHR(gender, hr, maxHr) {\r\n    return Math.round(hr/maxHr * 100);\r\n    if (gender == 'male') return Math.round(hr/MAX_MALE_HR * 100);\r\n    return Math.round(hr/MAX_FEMALE_HR * 100);\r\n}\r\nfunction CalculateZone(percentHr) {\r\n    if (percentHr <= 60) return 1;\r\n    if (percentHr <= 70) return 2;\r\n    if (percentHr <= 80) return 3;\r\n    if (percentHr <= 90) return 4;\r\n    return 5;\r\n}\r\nfunction CalculateVO2(hr, rhr) {\r\n    return 15.3 * (hr / rhr);\r\n}\r\nfunction CalculatePercentVO2(vo2, maxVo2) {\r\n    return Math.round(vo2/maxVo2 * 100);\r\n}\r\n\r\nfunction GetZoneColor(percentHr) {\r\n    if (percentHr <= 60) return 'gray';\r\n    if (percentHr <= 70) return 'blue';\r\n    if (percentHr <= 80) return 'green';\r\n    if (percentHr <= 90) return 'orange';\r\n    return 'red';\r\n}\r\n\r\nexport default class MemberCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.HR = new HR(props.info.memberInfo.gender ? 'male' : 'famale');\r\n\r\n        // Performance\r\n        const initHr = this.HR.RandomNormalHR();\r\n        const initPercentHr = CalculatePercentHR(props.info.memberInfo.gender ? 'male' : 'famale', initHr, props.info.memberInfo.maxHr);\r\n        const initVO2 = parseFloat(CalculateVO2(initHr, props.info.memberInfo.restHr).toFixed(3));\r\n        const initPercentVO2 = CalculatePercentVO2(initVO2, props.info.memberInfo.maxVO2);\r\n        this.performance = {\r\n            ClassId: this.props.classId,\r\n            MemberId: this.props.info.memberInfo.id,\r\n\r\n            Hr: initHr,\r\n            Calories: 0,\r\n            Zone1: 0,\r\n            Zone2: 0,\r\n            Zone3: 0,\r\n            Zone4: 0,\r\n            Zone5: 0,\r\n            Heavyload: 0,\r\n\r\n            PeakHr: initHr,\r\n            PercentHr: initPercentHr,\r\n            PeakPercentHr: initPercentHr,\r\n            VO2: initVO2,\r\n            PeakVO2: initVO2,\r\n            PercentVO2: initPercentVO2,\r\n            PeakPercentVO2: initPercentVO2\r\n        };\r\n\r\n        this.state = {\r\n            currentHr: this.performance.Hr,\r\n            emulatorInterval: undefined,\r\n            isEmulatorRun: false,\r\n            isCrease: false,\r\n            time: 0,\r\n            status: props.info.status\r\n        };\r\n\r\n        // Reset status\r\n        this.UpdateStatus = (status) => {\r\n            axios.post(`${Constants.BASE_URL}/classes/${this.props.classId}/updateMember`, {\r\n                ClassId: this.props.classId,\r\n                MemberId: this.props.info.memberInfo.id,\r\n                isCheckIn: status == \"Checked-in\"\r\n            }).then(() => {\r\n                this.setState({\r\n                    status: status\r\n                });\r\n            })\r\n        };\r\n        //this.UpdateStatus('Booked');\r\n\r\n        // Reset\r\n        this.Unbook = () => {\r\n            axios.post(`${Constants.BASE_URL}/classes/${this.props.classId}/removeMember`, {\r\n                ClassId: this.props.classId,\r\n                MemberId: this.props.info.memberInfo.id,\r\n            })\r\n        }\r\n        this.ResetPerformance = () => {\r\n            RenewPerformace(this.props.info.memberInfo.id, this.props.classId);\r\n        };\r\n\r\n        this.RunEmulator = () => {\r\n            if (this.state.status === 'Checked-in' && !this.state.isEmulatorRun) {\r\n                this.setState({\r\n                    emulatorInterval: setInterval(() => {\r\n                        const gender = this.props.info.memberInfo.gender ? 'male' : 'female';\r\n                        const { weight, age, restHr, maxHr, maxVO2 } = this.props.info.memberInfo;\r\n\r\n                        // Calculate performace\r\n                        this.performance.Hr = this.HR.RandomFitnessHR(this.performance.Hr);\r\n                        this.performance.PercentHr = CalculatePercentHR(gender, this.performance.Hr, maxHr);\r\n                        this.performance.Calories = parseFloat((this.performance.Calories + CalculateCalories(gender, weight, age, this.performance.Hr)).toFixed(3));\r\n                        this.performance['Zone' + CalculateZone(this.performance.PercentHr)] += 1;\r\n                        this.performance.Heavyload = this.performance.Zone4 + this.performance.Zone5;\r\n                        this.performance.PeakHr = this.performance.Hr > this.performance.PeakHr ? this.performance.Hr : this.performance.PeakHr;\r\n                        this.performance.PeakPercentHr = this.performance.PercentHr > this.performance.PeakPercentHr ? this.performance.PercentHr : this.performance.PeakPercentHr;\r\n                        this.performance.VO2 = parseFloat(CalculateVO2(this.performance.Hr, restHr).toFixed(3));\r\n                        this.performance.PeakVO2 = this.performance.VO2 > this.performance.PeakVO2 ? this.performance.VO2 : this.performance.PeakVO2;\r\n                        this.performance.PercentVO2 = CalculatePercentVO2(this.performance.VO2, maxVO2);\r\n                        this.performance.PeakPercentVO2 = this.performance.PercentVO2 > this.performance.PeakPercentVO2 ? this.performance.PercentVO2 : this.performance.PeakPercentVO2;\r\n\r\n                        SendPerformance(this.performance);\r\n                        this.setState({\r\n                            currentHr: this.performance.Hr,\r\n                            time: this.state.time + INTERVAL_TIME/1000\r\n                        });\r\n                    }, INTERVAL_TIME),\r\n                    isEmulatorRun: true\r\n                });\r\n            };\r\n        };\r\n        this.StopEmulator = () => {\r\n            if (this.state.isEmulatorRun) {\r\n                clearInterval(this.state.emulatorInterval);\r\n                this.setState({\r\n                    emulatorInterval: undefined,\r\n                    isEmulatorRun: false\r\n                })\r\n            }\r\n        };\r\n\r\n        this.IncreaseFitness = () => {\r\n            this.HR.IncreaseFitness();\r\n            this.setState({\r\n                isCrease: true\r\n            })\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isCrease: false\r\n                })\r\n            }, 3000)\r\n        }\r\n        this.DecreaseFitness = () => {\r\n            this.HR.DecreaseFitness();\r\n            this.setState({\r\n                isCrease: true\r\n            })\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isCrease: false\r\n                })\r\n            }, 3000)\r\n        }\r\n\r\n        // Event\r\n        this.props.startSubcribers.push(this.RunEmulator);\r\n        this.props.stopSubcribers.push(this.StopEmulator);\r\n        this.props.joinSubcribers.push(() => {\r\n            this.UpdateStatus('Checked-in');\r\n        });\r\n        this.props.resetSubcribers.push(() => {\r\n            this.StopEmulator();\r\n            this.ResetPerformance();\r\n            this.UpdateStatus('Booked');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        //const { status } = this.props.info;\r\n        const { id, fullName, photoURL, gender, weight, age, maxHr } = this.props.info.memberInfo;\r\n        const { currentHr, isEmulatorRun, isCrease, time, status } = this.state;\r\n        const { Calories, Zone1, Zone2, Zone3, Zone4, Zone5, Heavyload, PercentHr, PeakHr, PeakPercentHr, VO2, PeakVO2 } = this.performance;\r\n        return (\r\n            <Card bodyStyle={{\r\n                padding: 10\r\n            }}>\r\n                <Row>\r\n                    <Col span={7}>\r\n                        <Avatar src={photoURL} size={100} />\r\n                    </Col>\r\n                    <Col span={17}>\r\n                        <Row>\r\n                            <Col>\r\n                                <Typography.Text strong style={{\r\n                                    fontSize: '1.3em'\r\n                                }}>{`[${id}]${fullName}`}</Typography.Text>\r\n                                <span>\r\n                                    {` (${gender ? 'male' : 'female'} - ${age} ya - ${weight} kg) ${moment.utc(time * 1000).format('HH:mm:ss')}`}\r\n                                </span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col span={8}>\r\n                            {\r\n                                status == 'Booked' ?\r\n                                <Button type='primary' style={{\r\n                                    backgroundColor: 'yellow',\r\n                                    width: '100%',\r\n                                    color: 'red'\r\n                                }} onClick={() => {\r\n                                    CheckIn(id, this.props.classId).then(res => {\r\n                                        this.setState({\r\n                                            status: 'Checked-in'\r\n                                        })\r\n                                    }).catch(err => console.catch('ERROR', err));\r\n                                }}>Join</Button> :\r\n                                !isEmulatorRun ?\r\n                                <Button type='primary' style={{\r\n                                    width: '100%'\r\n                                }} onClick={() => {\r\n                                    this.RunEmulator();\r\n                                }}>Start</Button> :\r\n                                <Button type='primary' danger style={{\r\n                                    width: '100%'\r\n                                }} onClick={() => {\r\n                                    this.StopEmulator();\r\n                                }}>Stop</Button>\r\n                            }\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Button style={{\r\n                                    width: '100%'\r\n                                }} icon={<CaretUpOutlined />} loading={isCrease} onClick={() => {\r\n                                    this.IncreaseFitness();\r\n                                }}></Button>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Button style={{\r\n                                    width: '100%'\r\n                                }} icon={<CaretDownOutlined />} loading={isCrease} onClick={() => {\r\n                                    this.DecreaseFitness();\r\n                                }}></Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col span={8}><Typography.Text>HR: {`${currentHr} / ${PeakHr}`}</Typography.Text></Col>\r\n                            <Col span={8}><Typography.Text style={{\r\n                                color: GetZoneColor(PercentHr)\r\n                            }}>%HR: {`${PercentHr} / ${PeakPercentHr}`}</Typography.Text></Col>\r\n                            <Col span={8}><Typography.Text>MaxHr: {maxHr}</Typography.Text></Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col span={12}><Typography.Text>VO2: {`${VO2} / ${PeakVO2}`}</Typography.Text></Col>\r\n                        </Row>\r\n                        <Row gutter={10}>\r\n                            <Col span={12}><Typography.Text>Calories: {Calories}</Typography.Text></Col>\r\n                            <Col span={12}><Typography.Text strong>Splat point: {Heavyload}</Typography.Text></Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={10} justify='space-between'>\r\n                    <Col style={{\r\n                        backgroundColor: 'gray',\r\n                        color: 'white',\r\n                        fontWeight: 'bold',\r\n                        width: '20%',\r\n                        textAlign: 'center'\r\n                    }}><Typography.Text style={{\r\n                        color: 'white'\r\n                    }}>{Zone1}</Typography.Text></Col>\r\n                    <Col style={{\r\n                        backgroundColor: 'blue',\r\n                        color: 'white',\r\n                        fontWeight: 'bold',\r\n                        width: '20%',\r\n                        textAlign: 'center'\r\n                    }}><Typography.Text style={{\r\n                        color: 'white'\r\n                    }}>{Zone2}</Typography.Text></Col>\r\n                    <Col style={{\r\n                        backgroundColor: 'green',\r\n                        color: 'white',\r\n                        fontWeight: 'bold',\r\n                        width: '20%',\r\n                        textAlign: 'center'\r\n                    }}><Typography.Text style={{\r\n                        color: 'white'\r\n                    }}>{Zone3}</Typography.Text></Col>\r\n                    <Col style={{\r\n                        backgroundColor: 'orange',\r\n                        color: 'white',\r\n                        fontWeight: 'bold',\r\n                        width: '20%',\r\n                        textAlign: 'center'\r\n                    }}><Typography.Text style={{\r\n                        color: 'white'\r\n                    }}>{Zone4}</Typography.Text></Col>\r\n                    <Col style={{\r\n                        backgroundColor: 'red',\r\n                        fontWeight: 'bold',\r\n                        width: '20%',\r\n                        textAlign: 'center'\r\n                    }}><Typography.Text style={{\r\n                        color: 'white'\r\n                    }}>{Zone5}</Typography.Text></Col>\r\n                </Row>\r\n            </Card>\r\n        );\r\n    }\r\n    \r\n    componentDidMount() {\r\n        // Run emulator\r\n        //console.log('Run emulator', this.HR.MAX_FITNESS_HR);\r\n        //this.RunEmulator();\r\n    }\r\n}","import React from 'react';\r\nimport MemberCard from '../MemberCard';\r\nimport axios from 'axios';\r\nimport { Row, Col } from 'antd';\r\nimport * as Constants from '../../Constants'; \r\n\r\nfunction FetchRoster(classId) {\r\n    return axios.get(`${Constants.BASE_URL}/classes/${classId}/roster`);\r\n};\r\n\r\nexport default class Roster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roster: []\r\n        };\r\n    }\r\n    render() {\r\n        const { roster } = this.props;\r\n        return (\r\n            <div style={{\r\n                width: \"100%\"\r\n            }}>\r\n                <Row gutter={[10, 10]} style={{\r\n                    padding: 10\r\n                }}>\r\n                {\r\n                    (roster || []).length === 0 ? \"No members\" :\r\n                    roster.map(member => <Col key={member.id} span={8} md={12}>\r\n                        <MemberCard classId={this.props.classId} info={member} startSubcribers={this.props.startSubcribers} stopSubcribers={this.props.stopSubcribers} joinSubcribers={this.props.joinSubcribers} resetSubcribers={this.props.resetSubcribers}/>\r\n                    </Col>)\r\n                }\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        /*\r\n        FetchRoster(this.props.classId)\r\n            .then(res => {\r\n                console.log('SUCCESS', res);\r\n                this.setState({\r\n                    roster: res.data.rosters\r\n                })\r\n            })\r\n            .catch(err => console.log('ERROR', 'Failure to fetch roster', err));\r\n        */\r\n    }\r\n}","import React from 'react';\r\nimport { Roster } from './Components';\r\nimport { Row, Col, Button, Input, Modal, Menu, Dropdown, Avatar, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport * as Constants from './Constants';\r\n\r\nfunction parseQueryString() {\r\n  const str = window.location.search;\r\n  const objURL = {};\r\n\r\n  str.replace(\r\n      new RegExp( \"([^?=&]+)(=([^&]*))?\", \"g\" ),\r\n      function( $0, $1, $2, $3 ){\r\n          objURL[ $1 ] = $3;\r\n      }\r\n  );\r\n  return objURL;\r\n};\r\n\r\nfunction fetchMembers(classId) {\r\n  return axios.get(`${Constants.BASE_URL}/members`).then(res => {\r\n    const members = res.data.members;\r\n    return axios.get(`${Constants.BASE_URL}/classes/${classId}/roster`).then(res2 => {\r\n      const exIds = res2.data.rosters ? res2.data.rosters.map(r => r.memberInfo.id) : [];\r\n      return Promise.resolve(members.filter(m => !exIds.includes(m.id)))\r\n    }).catch(err => Promise.reject(err));;\r\n  }).catch(err => Promise.reject(err));;\r\n}\r\nfunction bookMember(classId, memberId) {\r\n  return axios.post(`${Constants.BASE_URL}/classes/${classId}/addMember`, {\r\n    memberId,\r\n    classId\r\n  });\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.startSubcribers = [];\r\n    this.stopSubcribers = [];\r\n    this.joinSubcribers = [];\r\n    this.resetSubcribers = [];\r\n\r\n    this.Renew = (id) => {\r\n      window.location.reload();\r\n    }\r\n\r\n    const params = parseQueryString();\r\n    this.classId = parseInt(params.classId) || 1;\r\n\r\n    this.state = {\r\n      isRenewwing: false,\r\n      isStarting: false,\r\n      isStopping: false,\r\n      classId: 1,\r\n      modalVisible: false,\r\n\r\n      isFetchingMembers: true,\r\n      members: [],\r\n      selectedMember: undefined,\r\n\r\n      rosters: []\r\n    };\r\n\r\n    // Event\r\n    this.StartAll = () => {\r\n      this.startSubcribers.forEach(run => run());\r\n    };\r\n    this.StopAll = () => {\r\n      this.stopSubcribers.forEach(run => run());\r\n    };\r\n    this.JoinAll = () => {\r\n      this.joinSubcribers.forEach(run => run());\r\n    }\r\n    this.Reset = () => {\r\n      this.setState({\r\n        isRenewwing: true\r\n      });\r\n      this.resetSubcribers.forEach(run => run());\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 3000);\r\n    }\r\n\r\n    // Modal\r\n    this.showModal = () => {\r\n      this.setState({\r\n        modalVisible: true,\r\n        isFetchingMembers: true,\r\n        members: [],\r\n        selectedMember: undefined\r\n      });\r\n      fetchMembers(this.classId).then(members => {\r\n        this.setState({\r\n          members: members,\r\n          isFetchingMembers: false,\r\n        });\r\n      });\r\n    };\r\n  \r\n    this.handleOk = e => {\r\n      console.log(e);\r\n      this.setState({\r\n        modalVisible: false,\r\n      });\r\n      if (this.state.selectedMember) {\r\n        bookMember(this.classId, this.state.selectedMember).then(res => {\r\n          this.fetchRoster(this.classId);\r\n        })\r\n      }\r\n    };\r\n  \r\n    this.handleCancel = e => {\r\n      console.log(e);\r\n      this.setState({\r\n        modalVisible: false,\r\n      });\r\n    };\r\n\r\n    //\r\n    this.fetchRoster = (classId) => {\r\n      axios.get(`${Constants.BASE_URL}/classes/${classId}/roster`).then(res => {\r\n        this.setState({\r\n          rosters: res.data.rosters\r\n        });\r\n      });\r\n    }\r\n\r\n    //\r\n    this.selectEnv = (env) => {\r\n      window.location.href = \"/f4u-simulator-tools?env=\" + env\r\n    }\r\n  }\r\n  render() {\r\n    const params = parseQueryString();\r\n    const classId = parseInt(params.classId) || 1;\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <span style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 16\r\n            }}>Evironment </span>\r\n            <Select style={{\r\n              width: 100\r\n            }} value={Constants.ENV} onChange={this.selectEnv}>\r\n              <Select.Option value=\"dev\">\r\n                DEV\r\n              </Select.Option>\r\n              <Select.Option value=\"tic\">\r\n                TIC\r\n              </Select.Option>\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={10}>\r\n          <Col>\r\n            <Button loading={this.state.isRenewwing} type='primary' onClick={() => {\r\n              /*\r\n              this.setState({\r\n                isRenewwing: true\r\n              })\r\n              this.Renew(1);\r\n              */\r\n             this.Reset();\r\n            }}>Reset</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button loading={this.state.isRenewwing} type='primary' onClick={() => {\r\n              this.JoinAll();\r\n            }}>Join All</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button loading={this.state.isRenewwing} type='primary' onClick={() => {\r\n              this.StartAll();\r\n            }}>Start All</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button loading={this.state.isRenewwing} type='primary' onClick={() => {\r\n              this.StopAll();\r\n            }}>Stop All</Button>\r\n          </Col>\r\n          <Col>\r\n            <Input.Search\r\n              placeholder=\"class id\"\r\n              onSearch={value => {\r\n                window.location.href = `/f4u-simulator-tools?env=${Constants.ENV}&classId=${value}`\r\n              }}\r\n              style={{ width: 200 }}\r\n            />\r\n            <span>{`Current class id = ${classId}`}</span>\r\n          </Col>\r\n          <Col>\r\n            <Button type=\"primary\" onClick={this.showModal}>Book member</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Roster roster={this.state.rosters} classId={classId} startSubcribers={this.startSubcribers} stopSubcribers={this.stopSubcribers} joinSubcribers={this.joinSubcribers} resetSubcribers={this.resetSubcribers}/>\r\n          </Col>\r\n        </Row>\r\n        <Modal\r\n          title=\"Book member\"\r\n          visible={this.state.modalVisible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {\r\n            this.state.isFetchingMembers ? \"Loading..\" : (\r\n              <select onChange={e => {\r\n                this.setState({\r\n                  selectedMember: parseInt(e.target.value)\r\n                })\r\n              }}>\r\n                <option selected disabled>Select member</option>\r\n                {\r\n                  this.state.members.map(m => (\r\n                    <option key={m.id} value={m.id}>{m.fullName}</option>\r\n                  ))\r\n                }\r\n              </select>\r\n            )\r\n          }\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchRoster(this.classId);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}